#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

build_pack_dir=$(cd $(dirname $(dirname $0)); pwd)

### Configure environment

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps


### Configure directories

mkdir -p $1 $2 $3 # Ensure dirs are present

build_dir=$(cd $1 && pwd)
cache_dir=$(cd $2 && pwd)
env_dir=$(cd $3 && pwd)
heroku_dir=$build_dir/.heroku
mkdir -p $heroku_dir/node

source ${build_pack_dir}/lib/common.sh
source ${build_pack_dir}/lib/build.sh

old_npm=$(file_contents "$cache_dir/npm-version")
old_node=$(file_contents "$cache_dir/node-version")

head "Loading configuration and environment"
load_config
export_config_vars
export_mix_env

if [ -e package.json ]; then
  cached_node=$cache_dir/node-v$node_version-linux-x64.tar.gz

  head "Installing binaries"
  download_node
  install_node
  install_npm

  head "Building dependencies"
  install_and_cache_npm_deps
fi

compile

head "Finalizing build"
write_profile
